DROP SCHEMA IF EXISTS WhatPlant CASCADE;
CREATE SCHEMA WhatPlant;
SET search_path TO WhatPlant;


/* -------------------------------	PHYLA		------------------------------- */

CREATE TABLE phyla 	(
			phylum_id BIGINT PRIMARY KEY,
			phylum_latin_name VARCHAR UNIQUE NOT NULL, 	/* latin scientific name */
			phylum_english_name VARCHAR UNIQUE,	/* english name */
			phylum_german_name VARCHAR UNIQUE	/* german name = Stamm */
			) ;


/* -------------------------------	CLASSES		------------------------------- */

CREATE TABLE classes 	(
			class_id BIGINT PRIMARY KEY,
			class_latin_name VARCHAR UNIQUE NOT NULL, 	/* latin scientific name */
			-- class_english_name VARCHAR UNIQUE, 		/* english name */
			-- class_german_name VARCHAR UNIQUE, 		/* german name - Klasse */
			phylum_id BIGINT NOT NULL REFERENCES phyla(phylum_id)			
			) ;


/* -------------------------------	SUBCLASSES	------------------------------- */

CREATE TABLE subclasses (
			subclass_id BIGINT PRIMARY KEY,
			subclass_latin_name VARCHAR UNIQUE NOT NULL, 			/* latin scientific name */
			-- subclass_english_name VARCHAR UNIQUE, 			/* english name */
			-- subclass_german_name VARCHAR UNIQUE, 			/* german name - Unterklasse */
			class_id BIGINT NOT NULL REFERENCES classes(class_id)
			) ;


/* -------------------------------	SUPERORDERS		------------------------------- */

CREATE TABLE superorders 	(
				superorder_id BIGINT PRIMARY KEY,
				superorder_latin_name VARCHAR UNIQUE NOT NULL,
				-- superorder_english_name VARCHAR UNIQUE,
				-- superorder_german_name VARCHAR UNIQUE, 			/* german name - Ãœberordnung */
				subclass_id BIGINT REFERENCES subclasses(subclass_id)			
				) ;


/* -------------------------------	ORDERS		------------------------------- */

CREATE TABLE orders 	(
			order_id BIGINT PRIMARY KEY,
			order_latin_name VARCHAR UNIQUE NOT NULL, 			/* latin scientific name */
			-- order_english_name VARCHAR UNIQUE, 				/* english name */
			-- order_german_name VARCHAR UNIQUE, 				/* german name - Ordnung */
			superorder_id BIGINT REFERENCES superorders(superorder_id), 	/* 2 */
			subclass_id BIGINT REFERENCES subclasses(subclass_id),		/* 52 */
			class_id BIGINT REFERENCES classes(class_id),			/* 11 */
			phylum_id BIGINT REFERENCES phyla(phylum_id)			/* 64 */
			) ;


/* -------------------------------	FAMILIES	------------------------------- */

CREATE TABLE families 	(
			family_id BIGINT PRIMARY KEY,
			family_latin_name VARCHAR UNIQUE NOT NULL,  	/* latin scientific name */
			-- family_english_name VARCHAR UNIQUE,  	/* english name */
			-- family_german_name VARCHAR UNIQUE,  		/* german name - Familie */
			order_id BIGINT REFERENCES orders(order_id) 	/* 697 */
			) ;


/* -------------------------------	SUBFAMILIES	------------------------------- */

CREATE TABLE subfamilies 	(
			subfamily_id BIGINT PRIMARY KEY,
			subfamily_latin_name VARCHAR UNIQUE NOT NULL,  	/* latin scientific name */
			-- subfamily_english_name VARCHAR UNIQUE,  	/* english name */
			-- subfamily_german_name VARCHAR UNIQUE,  	/* german name - Unterfamilie */
			family_id BIGINT REFERENCES families(family_id)
			) ;


/* -------------------------------	TRIBES		------------------------------- */

CREATE TABLE tribes 	(
			tribe_id BIGINT PRIMARY KEY,
			tribe_latin_name VARCHAR UNIQUE NOT NULL,  		/* latin scientific name */
			-- tribe_english_name VARCHAR UNIQUE,  			/* english name */
			-- tribe_german_name VARCHAR UNIQUE,  			/* german name - Tribus */
			subfamily_id BIGINT REFERENCES subfamilies(subfamily_id)
			) ;


/* -------------------------------	SUBTRIBES		------------------------------- */

CREATE TABLE subtribes 	(
			subtribe_id BIGINT PRIMARY KEY,
			subtribe_latin_name VARCHAR NOT NULL,  		/* latin scientific name */
			-- subtribe_english_name VARCHAR UNIQUE,  	/* english name */
			-- subtribe_german_name VARCHAR UNIQUE,		/* german name - Untertribus */
			tribe_id BIGINT REFERENCES tribes(tribe_id)
			) ;


/* -------------------------------	GENERA		------------------------------- */

CREATE TABLE genera 	(
			genus_id BIGINT PRIMARY KEY,
			genus_latin_name VARCHAR NOT NULL, 		/* latin scientific name */
			-- genus_english_name VARCHAR,	 	 	/* english name */
			-- genus_german_name VARCHAR,  			/* german name - Gattung */
			-- parent_id BIGINT,
			subtribe_id BIGINT REFERENCES subtribes(subtribe_id),
			tribe_id BIGINT REFERENCES tribes(tribe_id),
			subfamily_id BIGINT REFERENCES subfamilies(subfamily_id),
			family_id BIGINT REFERENCES families(family_id)
			) ;


/* -------------------------------	SUBGENERA	------------------------------- */

CREATE TABLE subgenera 	(
			subgenus_id BIGINT PRIMARY KEY,
			subgenus_latin_name VARCHAR NOT NULL, 		/* latin scientific name */
			-- subgenus_english_name VARCHAR,	 	/* english name */
			-- subgenus_german_name VARCHAR,  		/* german name - Untergattung */
			-- parent_id BIGINT--,
			genus_id BIGINT REFERENCES genera(genus_id)
			) ;


/* -------------------------------	SECTIONS	------------------------------- */

CREATE TABLE sections 	(
			section_id BIGINT PRIMARY KEY,
			section_latin_name VARCHAR NOT NULL, 		/* latin scientific name */
			-- section_english_name VARCHAR,	 	/* english name */
			-- section_german_name VARCHAR,  		/* german name - Sektion */
			-- parent_id BIGINT--,
			subgenus_id BIGINT REFERENCES subgenera(subgenus_id),
			genus_id BIGINT REFERENCES genera(genus_id)
			) ;


/* -------------------------------	SUBSECTIONS	------------------------------- */

CREATE TABLE subsections 	(
				subsection_id BIGINT PRIMARY KEY,
				subsection_latin_name VARCHAR NOT NULL, 	/* latin scientific name */
				-- subsection_english_name VARCHAR,	 	/* english name */
				-- subsection_german_name VARCHAR,  		/* german name - Subsektion */
				-- parent_id BIGINT--,
				section_id BIGINT REFERENCES sections(section_id),
				genus_id BIGINT REFERENCES genera(genus_id)
				) ;


/* -------------------------------	SERIES		------------------------------- */

CREATE TABLE series 	(
			series_id BIGINT PRIMARY KEY,
			series_latin_name VARCHAR NOT NULL, 	/* latin scientific name */
			-- series_english_name VARCHAR,	 	/* english name */
			-- series_german_name VARCHAR,  	/* german name - Serie */
			-- parent_id BIGINT--,
			section_id BIGINT REFERENCES sections(section_id),
			genus_id BIGINT REFERENCES genera(genus_id)
			) ;


/* -------------------------------	SUBSERIES	------------------------------- */

CREATE TABLE subseries 	(
			subseries_id BIGINT PRIMARY KEY,
			subseries_latin_name VARCHAR NOT NULL, 	/* latin scientific name */
			-- subseries_english_name VARCHAR, 	/* english name */
			-- subseries_german_name VARCHAR,  	/* german name - Subserie */
			-- parent_id BIGINT--,
			series_id BIGINT REFERENCES series(series_id)
			) ;


/* -------------------------------	SPECIES		------------------------------- */

CREATE TABLE species 	(
			species_id BIGINT PRIMARY KEY,
			species_latin_name VARCHAR NOT NULL,		/* latin scientific name */
			-- species_english_name VARCHAR,  		/* english name */
			-- species_german_name VARCHAR,  		/* german name - Art */
			subseries_id BIGINT REFERENCES subseries(subseries_id),
			series_id BIGINT REFERENCES series(series_id),
			subsection_id BIGINT REFERENCES subsections(subsection_id),
			section_id BIGINT REFERENCES sections(section_id),
			subgenus_id BIGINT REFERENCES subgenera(subgenus_id),
			genus_id BIGINT REFERENCES genera(genus_id),
			genus_name VARCHAR,
			family_name VARCHAR,
			properties VARCHAR
			) ;


/* --------------------------	 SPECIES_SYNONYMS	 ------------------------------- */

CREATE TABLE species_synonyms 	(
				species_synonym_id BIGINT PRIMARY KEY,
				species_synonym_name VARCHAR NOT NULL,		/* latin scientific name */
				synonym_for BIGINT NOT NULL REFERENCES species(species_id)
				) ;

/* copy rows from WFO_data table into synonyms table WHERE taxonRank = 'species' AND nomenclaturalStatus = 'Valid' AND taxonomicStatus == 'Synonym' 
use columns: 	taxonID without 'wfo-' for specie_id, 
		scientificName for specie_name,
		acceptedNameUsageID for synonym_for */

